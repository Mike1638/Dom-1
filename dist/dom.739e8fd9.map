{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","nownode","parentNode","insertBefore","nextSibling","before","append","parent","child","appendChild","wrap","remove","parerntNode","removeChild","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","test","innerText","textContent","html","style","Object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","i","next","nodeType","previous","previousSibling","each","nodeList","call","index","list"],"mappings":"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","file":"dom.739e8fd9.map","sourceRoot":"..\\src","sourcesContent":["// window.dom = {};\r\n// dom.create = function () {};\r\n\r\n// 简化至下面的代码\r\n\r\n// window.dom = {\r\n//     create: function () {}\r\n// }\r\n\r\n// 简化至下面的代码\r\n\r\n// window.dom = {\r\n//     create() {}\r\n// }\r\n\r\nwindow.dom = {\r\n    // *******新增******\r\n    // 创建节点\r\n    create(string) {\r\n        const container = document.createElement('template');\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n    },\r\n    // 新增弟弟\r\n    after(node, nownode) {\r\n        node.parentNode.insertBefore(nownode, node.nextSibling)\r\n    },\r\n    // 新增哥哥\r\n    before(node, nownode) {\r\n        node.parentNode.insertBefore(nownode, node)\r\n    },\r\n    // 新增儿子\r\n    append(parent, child) {\r\n        parent.appendChild(child)\r\n    },\r\n    // 新增爸爸\r\n    wrap(parent, child) {\r\n        dom.before(parent, child)\r\n        dom.append(child, parent)\r\n    },\r\n\r\n    // *****删除*****\r\n    // 删除节点\r\n    remove(node) {\r\n        node.parerntNode.removeChild(node)\r\n        return node // 保留节点引用\r\n    },\r\n    //  删除后代\r\n    empty(node) {\r\n        // 此方法不可用 循环时childrenNodes.length会发生改变\r\n        // const childrenNodes = node.childNodes;\r\n        // const array = [];\r\n        // for (let i = 0; i < childrenNodes.length; i++) {\r\n        //     dom.remove(childrenNodes[i]);\r\n        //     array.push(childrenNodes[i])\r\n        // }\r\n        // return array\r\n\r\n        // 总是找到节点的第一个孩子并将它删除\r\n        const array = [];\r\n        let x = node.firstChild;\r\n        while (x) {\r\n            array.push(dom.remove(node.firstChild));\r\n        }\r\n        return array\r\n    },\r\n\r\n    // *****改*****\r\n    // 修改属性 读取属性值\r\n    attr(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            node.setAttribute(name, value);\r\n        } else if (arguments.length === 2) {\r\n            return node.getAttribute(name)\r\n        }\r\n    },\r\n\r\n    // 设置文本内容 读取文本内容\r\n    test(node, string) {\r\n        // 重载\r\n        if (arguments.length === 2) {\r\n            // 适配\r\n            if ('innerText' in node) {\r\n                node.innerText = string;\r\n            } else {\r\n                node.textContent = string;\r\n            }\r\n        } else if (arguments.length === 1) {\r\n            if ('innerText' in node) {\r\n                return node.innerText;\r\n            } else {\r\n                return node.textContent;\r\n            }\r\n        }\r\n    },\r\n\r\n    //设置HTML\r\n    html(node, string) {\r\n        if (arguments.length === 2) {\r\n            node.innerHTML = string;\r\n        } else if (arguments.length) {\r\n            return node.innerHTML\r\n        }\r\n    },\r\n\r\n    // 设置样式\r\n    style(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            // dom,style(test,'color','red')\r\n            node.style[name] = value;\r\n        } else if (arguments.length === 2) {\r\n            // dom.style.(test,'color')\r\n            // dom.style.(test,{color:'red'})\r\n            if (typeof name === 'String') {\r\n                return node.style[name]\r\n            } else if (name instanceof Object) {\r\n                for (let key in name) {\r\n                    // console.log(key, value[key]);\r\n                    node.style[key] = name[key]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    // 设置类\r\n    class: {\r\n        add(node, className) {\r\n            node.classList.add(className);\r\n        },\r\n        remove(node, className) {\r\n            node.classList.remove(className)\r\n        },\r\n        has(node, className) {\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n\r\n    // 设置事件\r\n    on(node, eventName, fn) {\r\n        node.addEventListener(eventName, fn)\r\n    },\r\n    off(node, eventName, fn) {\r\n        node.removeEventListener(eventName, fn)\r\n    },\r\n\r\n\r\n    // *****查*****\r\n\r\n    find(selector, scope) {\r\n        return (scope || document).querySelectorAll(selector);\r\n    },\r\n    parent(node) {\r\n        return node.parentNode;\r\n    },\r\n    children(node) {\r\n        return node.children;\r\n    },\r\n    siblings(node) {\r\n        return Array.from(node.parentNode.children).filter(i => i !== node);\r\n    },\r\n    next(node) {\r\n        let x = node.nextSibling;\r\n        while (x && x.nodeType === 3) {\r\n            x = x.nextSibling\r\n        };\r\n        return x;\r\n    },\r\n    previous(node) {\r\n        let x = node.previousSibling;\r\n        while (x && x.nodeType === 3) {\r\n            x = x.previousSibling\r\n        };\r\n        return x;\r\n    },\r\n    //遍历\r\n    each(nodeList, fn) {\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            fn.call(null, nodeList[i])\r\n        }\r\n    },\r\n    // 排行老几\r\n    index(node) {\r\n        const list = dom.children(node.parentNode);\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (node == list[i]) {\r\n                return i\r\n            }\r\n        }\r\n    }\r\n}"]}